// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Maintains a snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="chakra-ui-light"
  >
    <div>
      <div
        class="css-12hvf5p"
      >
        <div
          class="css-1x4ekbu"
        >
          <button
            aria-label="Switch to dark mode"
            class="chakra-button css-1f9g9hd"
            type="button"
          >
            <svg
              aria-hidden="true"
              fill="currentColor"
              focusable="false"
              height="1em"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 512 512"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"
              />
            </svg>
          </button>
        </div>
      </div>
      <span />
    </div>
    <div
      class="chakra-portal"
    >
      <ul
        aria-live="polite"
        id="chakra-toast-manager-top"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        aria-live="polite"
        id="chakra-toast-manager-top-left"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        aria-live="polite"
        id="chakra-toast-manager-top-right"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        aria-live="polite"
        id="chakra-toast-manager-bottom-left"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        aria-live="polite"
        id="chakra-toast-manager-bottom"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        aria-live="polite"
        id="chakra-toast-manager-bottom-right"
        role="region"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="css-12hvf5p"
    >
      <div
        class="css-1x4ekbu"
      >
        <button
          aria-label="Switch to dark mode"
          class="chakra-button css-1f9g9hd"
          type="button"
        >
          <svg
            aria-hidden="true"
            fill="currentColor"
            focusable="false"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 512 512"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"
            />
          </svg>
        </button>
      </div>
    </div>
    <span />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": Object {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
